一、character_set_client
　　主要用来设置客户端使用的字符集。


二、character_set_connection
　　主要用来设置连接数据库时的字符集，如果程序中没有指明连接数据库使用的字符集类型则按照这个字符集设置。


三、character_set_database
　　主要用来设置默认创建数据库的编码格式，如果在创建数据库时没有设置编码格式，就按照这个格式设置。


四、character_set_filesystem
　　文件系统的编码格式，把操作系统上的文件名转化成此字符集，即把 character_set_client转换character_set_filesystem， 默认binary是不做任何转换的。


五、character_set_results
　　数据库给客户端返回时使用的编码格式，如果没有指明，使用服务器默认的编码格式。


六、character_set_server
　　服务器安装时指定的默认编码格式，这个变量建议由系统自己管理，不要人为定义。


七、character_set_system
　　数据库系统使用的编码格式，这个值一直是utf8，不需要设置，它是为存储系统元数据的编码格式。


八、character_sets_dir
　　这个变量是字符集安装的目录。
--------------------- 

在启动mysql后，我们只关注下列变量是否符合我们的要求

character_set_client

character_set_connection
c
haracter_set_database

character_set_results

character_set_server

下列三个系统变量我们不需要关心，不会影响乱码等问题

character_set_filesystem

character_set_system

character_sets_dir

[mysqld]

#以及mysql官方建议的影响最大的2个数值
key_buffer_size=384M
table_open_cache=4000

# 我加的强制使用utf8，skip-character-set-client-handshake是免去客户端的字符集设置，采用服务器端的?
character-set-server=utf8mb4
collation-server=utf8mb4_general_ci
skip-character-set-client-handshake

# 可以少很多dns解析？
skip-name-resolve

# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
innodb_buffer_pool_size = 40000M

# 我加的慢查询日志
slow-query-log=1
slow_query_log_file="D:/mysql56/slow.log"
long_query_time=5

# 我加的错误日志
log-error="D:/mysql56/error.err"

# 以下设置权限，自动导出的时候，不用再输入密码？
secure_file_priv="D:/"
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES 

