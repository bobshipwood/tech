1 computed properties 

<div id='app'>
        <p> 原始字符串： {{my_text}} </p>
        <p> 通过运算后得到的字符串： {{my_computed_text}} </p>
    </div>
    <script>
        Vue.createApp({
            data() {
                return {
                    my_text: 'good good study, day day up'
                }
            },
            computed: {
                my_computed_text: function(){
                    // 先去掉逗号，按照空格分割成数组，然后翻转，并用'-'连接
                    return this.my_text.replace(',', '').split(' ').reverse().join('-')
                }
            }
        }).mount('#app')
    </script>

2 普通方法
 <div id='app'>
        <p> 原始字符串： {{my_text}} </p>
        <p> 通过运算后得到的字符串： {{my_computed_text()}} </p>
    </div>
    <script>
        Vue.createApp({
            data() {
                return {
                    my_text: 'good good study, day day up'
                }
            },
            methods: {
                my_computed_text: function(){
                    // 先去掉逗号，按照空格分割成数组，然后翻转，并用'-'连接
                    return this.my_text.replace(',', '').split(' ').reverse().join('-')
                }
            }
        }).mount('#app')
    </script>

3  他们的区别，使用computed properties时，会把结果缓存起来，如果对应的依赖数据没有变化，那么也就不会变化，使用function时，每次都会重新计算对应的数值